import 'package:dartz/dartz.dart';import 'package:note_pulse/Features/Main/data/models/notes_model.dart';import 'package:note_pulse/Features/Main/data/repositories/main_repo.dart';class GetNotesUseCase {  final MainRepo repo;  GetNotesUseCase(this.repo);  Future<Either<String, List<NotesModel>>> execute() {    return repo.getData();  }}class InsertNoteUseCase {  final MainRepo repo;  InsertNoteUseCase(this.repo);  Future<Either<String, NotesModel>> execute(NotesModel note) {    return repo.insertData(note);  }}class RemoveNoteUseCase {  final MainRepo repo;  RemoveNoteUseCase(this.repo);  Future<Either<String, bool>> execute(String id) {    return repo.removeData(id);  }}class UpdateNoteUseCase {  final MainRepo repo;  UpdateNoteUseCase(this.repo);  Future<Either<String, bool>> execute(NotesModel note) {    return repo.updateData(note);  }}