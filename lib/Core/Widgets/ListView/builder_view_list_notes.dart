import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:note_pulse/Core/Widgets/loading.dart';import 'custom_list.dart';import '../../../Features/Main/data/models/notes_model.dart';import '../../../Features/Main/presentation/manager/main_cubit.dart';import '../../../Features/Main/presentation/manager/main_states.dart';enum StatusView { all, favorite, passed }class BuilderViewListNotes extends StatefulWidget {  final StatusView statusView;  const BuilderViewListNotes({super.key, required this.statusView});  @override  State<BuilderViewListNotes> createState() => _BuilderViewListNotesState();}class _BuilderViewListNotesState extends State<BuilderViewListNotes> {  late List<NotesModel> _list = [];  @override  void initState() {    MainCubit.get(context).fetchNotes(); // TODO: implement initState    super.initState();  }  @override  Widget build(BuildContext context) {    return BlocConsumer<MainCubit, MainState>(      listener: (context, state) {        if (state is SuccessesGetDatabase) {          if (widget.statusView == StatusView.passed) {            _list = state.passed;          } else if (widget.statusView == StatusView.favorite) {            _list = state.favourite;          } else {            _list = state.notes;          }        }      },      builder: (context, state) {        if(state is LoadingGetData)          {            return const LoadingWidget();          }        return ListViewNotes(          notes: _list,        );      },    );  }}